{
  "name": "ocm-vscode-conventional-commits",
  "displayName": "OCM Conventional Commits",
  "description": "OCM Conventional Commits for VSCode.",
  "icon": "assets/ocm-white.png",
  "publisher": "holykoenig",
  "version": "1.16.0",
  "engines": {
    "vscode": "^1.14.0"
  },
  "categories": [
    "Snippets",
    "SCM Providers"
  ],
  "keywords": [
    "git",
    "commit",
    "conventional-commits",
    "gacp",
    "conventional-changelog",
    "commitizen",
    "cz"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/vivaxy/vscode-conventional-commits.git"
  },
  "author": "vivaxy",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/vivaxy/vscode-conventional-commits/issues"
  },
  "homepage": "https://github.com/vivaxy/vscode-conventional-commits",
  "activationEvents": [
    "onCommand:extension.conventionalCommits"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.conventionalCommits",
        "title": "OCM Conventional Commits",
        "icon": {
          "dark": "./assets/ocm-logo-white.svg",
          "light": "./assets/ocm-logo.svg"
        }
      }
    ],
    "menus": {
      "scm/title": [
        {
          "when": "scmProvider == git",
          "command": "extension.conventionalCommits",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "OCM Conventional Commits",
      "properties": {
        "conventionalCommits.autoCommit": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Controls whether the extension should automatically commit files.\n\n*Enable `Settings > git.enableSmartCommit` and set `Settings > git.smartCommitChanges` to `all` to commit all changes when there are no staged changes.*\n\n*Set `Settings > git.postCommitCommand` to `sync` to run `git.sync` after commit.*"
        },
        "conventionalCommits.scopes": {
          "type": "array",
          "default": [
            "omnichannel",
            "login",
            "search",
            "plp",
            "pdp",
            "checkout",
            "actions",
            "security",
            "erp",
            "pms"
          ],
          "markdownDescription": "Available scopes."
        },
        "conventionalCommits.lineBreak": {
          "type": "string",
          "default": "",
          "markdownDescription": "Treat words as line breaks.\n\nBlank means no line breaks."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "release": "standard-version && vsce publish && git push --follow-tags"
  },
  "devDependencies": {
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.14.0",
    "husky": "^4.2.3",
    "lint-staged": "^10.0.9",
    "prettier": "^2.0.2",
    "standard-version": "^9.0.0",
    "typescript": "^4.0.0",
    "vsce": "^1.74.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,ts,css,less,json,md,html,yml,yaml,pcss,jsx,tsx}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@commitlint/load": "^9.0.0",
    "@commitlint/rules": "^9.0.1",
    "conventional-commit-types": "^3.0.0"
  }
}
